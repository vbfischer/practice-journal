yarn run v1.12.3
$ tsc --noEmit
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/express/package.json'. Package ID is 'express/index.d.ts@4.16.4'.
File '/Users/fischer/Code/practice-journal/node_modules/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
File '/Users/fischer/Code/practice-journal/node_modules/express/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express/package.json'. Package ID is '@types/express/index.d.ts@4.16.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving module 'body-parser' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'body-parser'.
'paths' option is specified, looking for a pattern to match module name 'body-parser'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'body-parser'.
Resolving module name 'body-parser' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/body-parser'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/body-parser', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/body-parser.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/body-parser.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/body-parser.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/body-parser' does not exist, skipping all lookups in it.
Loading module 'body-parser' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/body-parser/package.json'. Package ID is 'body-parser/index.d.ts@1.18.3'.
File '/Users/fischer/Code/practice-journal/node_modules/body-parser.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/body-parser.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/body-parser.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
File '/Users/fischer/Code/practice-journal/node_modules/body-parser/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/body-parser/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/body-parser/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/package.json'. Package ID is '@types/body-parser/index.d.ts@1.17.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts'.
======== Module name 'body-parser' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts'. ========
======== Resolving module './routes/routes' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/routes/routes', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/routes/routes.ts' exist - use it as a name resolution result.
======== Module name './routes/routes' was successfully resolved to '/Users/fischer/Code/practice-journal/server/routes/routes.ts'. ========
======== Resolving module './auth' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/auth', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/auth.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/auth.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/auth.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/auth/package.json' does not exist.
File '/Users/fischer/Code/practice-journal/server/auth/index.ts' exist - use it as a name resolution result.
======== Module name './auth' was successfully resolved to '/Users/fischer/Code/practice-journal/server/auth/index.ts'. ========
======== Resolving module 'winston' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston'.
'paths' option is specified, looking for a pattern to match module name 'winston'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston'.
Resolving module name 'winston' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/winston'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/winston', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/winston.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/winston' does not exist, skipping all lookups in it.
Loading module 'winston' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field './index.d.ts' that references '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/winston/package.json'. Package ID is 'winston/index.d.ts@3.1.0'.
File '/Users/fischer/Code/practice-journal/node_modules/winston.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field './index.d.ts' that references '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'.
File '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'.
======== Module name 'winston' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
======== Resolving module 'express-winston' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express-winston'.
'paths' option is specified, looking for a pattern to match module name 'express-winston'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express-winston'.
Resolving module name 'express-winston' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express-winston'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express-winston', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express-winston.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express-winston.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express-winston.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express-winston' does not exist, skipping all lookups in it.
Loading module 'express-winston' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/express-winston/package.json'. Package ID is 'express-winston/index.d.ts@3.0.1'.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-winston/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/package.json'. Package ID is '@types/express-winston/index.d.ts@3.0.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts'.
======== Module name 'express-winston' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts'. ========
======== Resolving module 'mongoose' from '/Users/fischer/Code/practice-journal/server/app.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mongoose'.
'paths' option is specified, looking for a pattern to match module name 'mongoose'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mongoose'.
Resolving module name 'mongoose' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/mongoose'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/mongoose', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/mongoose.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/mongoose.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/mongoose.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/mongoose' does not exist, skipping all lookups in it.
Loading module 'mongoose' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './index.js' that references '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/mongoose/package.json'. Package ID is 'mongoose/index.d.ts@5.4.0'.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './index.js' that references '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongoose/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/package.json'. Package ID is '@types/mongoose/index.d.ts@5.3.5'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'.
======== Module name 'mongoose' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'. ========
======== Resolving type reference directive 'express-serve-static-core', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/package.json'. Package ID is '@types/express-serve-static-core/index.d.ts@4.16.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'.
======== Type reference directive 'express-serve-static-core' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', primary: true. ========
======== Resolving type reference directive 'serve-static', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/package.json'. Package ID is '@types/serve-static/index.d.ts@1.13.2'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts'.
======== Type reference directive 'serve-static' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'events' from '/Users/fischer/Code/practice-journal/node_modules/@types/node/inspector.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
'paths' option is specified, looking for a pattern to match module name 'events'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
Resolving module name 'events' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/events'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/events', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/events.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/events' does not exist, skipping all lookups in it.
Loading module 'events' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/events.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/events.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/events.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/events'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/events/package.json'. Package ID is '@types/events/index.d.ts@1.2.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/events.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts'.
======== Module name 'events' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts'. ========
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'url' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'child_process' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'tls' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'http' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'url' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'readline' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'vm' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'util' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'querystring' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'dns' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'dns' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'url' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'crypto' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'dns' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'events' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'fs' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'net' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'stream' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'tls' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'url' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'http' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'http' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
Module 'async_hooks' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Resolving module 'http' from '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
'paths' option is specified, looking for a pattern to match module name 'http'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
Resolving module name 'http' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/http'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/http', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/http.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/http' does not exist, skipping all lookups in it.
Loading module 'http' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/http.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/http.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/http.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/http.d.ts' does not exist.
Directory '/Users/fischer/Code/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/node_modules' does not exist, skipping all lookups in it.
Directory '/node_modules' does not exist, skipping all lookups in it.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
'paths' option is specified, looking for a pattern to match module name 'http'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
Resolving module name 'http' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/http'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/http', target file type 'JavaScript'.
File '/Users/fischer/Code/practice-journal/server/http.js' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.jsx' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/http' does not exist, skipping all lookups in it.
Loading module 'http' from 'node_modules' folder, target file type 'JavaScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/http.js' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/http.jsx' does not exist.
Directory '/Users/fischer/Code/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/node_modules' does not exist, skipping all lookups in it.
Directory '/node_modules' does not exist, skipping all lookups in it.
======== Module name 'http' was not resolved. ========
======== Resolving module 'events' from '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
'paths' option is specified, looking for a pattern to match module name 'events'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
Resolving module name 'events' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/events'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/events', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/events.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/events' does not exist, skipping all lookups in it.
Loading module 'events' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'events' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'events' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts'. ========
======== Resolving module 'range-parser' from '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'range-parser'.
'paths' option is specified, looking for a pattern to match module name 'range-parser'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'range-parser'.
Resolving module name 'range-parser' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/range-parser'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/range-parser', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/range-parser.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/range-parser.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/range-parser.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/range-parser' does not exist, skipping all lookups in it.
Loading module 'range-parser' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/range-parser/package.json'. Package ID is 'range-parser/index.d.ts@1.2.0'.
File '/Users/fischer/Code/practice-journal/node_modules/range-parser.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/range-parser.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/range-parser.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
File '/Users/fischer/Code/practice-journal/node_modules/range-parser/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/range-parser/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/range-parser/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/package.json'. Package ID is '@types/range-parser/index.d.ts@1.2.3'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts'.
======== Module name 'range-parser' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts'. ========
======== Resolving type reference directive 'express-serve-static-core', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/package.json'. Package ID is '@types/express-serve-static-core/index.d.ts@4.16.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'.
======== Type reference directive 'express-serve-static-core' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', primary: true. ========
======== Resolving module 'express-serve-static-core' from '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express-serve-static-core'.
'paths' option is specified, looking for a pattern to match module name 'express-serve-static-core'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express-serve-static-core'.
Resolving module name 'express-serve-static-core' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express-serve-static-core'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express-serve-static-core', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express-serve-static-core.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express-serve-static-core.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express-serve-static-core.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express-serve-static-core' does not exist, skipping all lookups in it.
Loading module 'express-serve-static-core' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/express-serve-static-core.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-serve-static-core.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/express-serve-static-core.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/package.json'. Package ID is '@types/express-serve-static-core/index.d.ts@4.16.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'.
======== Module name 'express-serve-static-core' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'. ========
======== Resolving module 'mime' from '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mime'.
'paths' option is specified, looking for a pattern to match module name 'mime'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mime'.
Resolving module name 'mime' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/mime'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/mime', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/mime.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/mime.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/mime.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/mime' does not exist, skipping all lookups in it.
Loading module 'mime' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'mime.js' that references '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/mime/package.json'. Package ID is 'mime/mime.d.ts@1.4.1'.
File '/Users/fischer/Code/practice-journal/node_modules/mime.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'mime.js' that references '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js'.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime/mime.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/mime/mime.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/mime/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mime/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mime'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mime/package.json'. Package ID is '@types/mime/index.d.ts@2.0.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mime.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts'.
======== Module name 'mime' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts'. ========
======== Resolving module 'body-parser' from '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'body-parser'.
'paths' option is specified, looking for a pattern to match module name 'body-parser'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'body-parser'.
Resolving module name 'body-parser' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/body-parser'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/body-parser', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/body-parser.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/body-parser.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/body-parser.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/body-parser' does not exist, skipping all lookups in it.
Loading module 'body-parser' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'body-parser' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'body-parser' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts'. ========
======== Resolving module 'serve-static' from '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'serve-static'.
'paths' option is specified, looking for a pattern to match module name 'serve-static'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'serve-static'.
Resolving module name 'serve-static' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/serve-static'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/serve-static', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/serve-static.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/serve-static.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/serve-static.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/serve-static' does not exist, skipping all lookups in it.
Loading module 'serve-static' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/serve-static/package.json'. Package ID is 'serve-static/index.d.ts@1.13.2'.
File '/Users/fischer/Code/practice-journal/node_modules/serve-static.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/serve-static.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/serve-static.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' does not have a 'main' field.
File '/Users/fischer/Code/practice-journal/node_modules/serve-static/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/serve-static/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/serve-static/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/package.json'. Package ID is '@types/serve-static/index.d.ts@1.13.2'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts'.
======== Module name 'serve-static' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts'. ========
======== Resolving module 'express-serve-static-core' from '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express-serve-static-core'.
'paths' option is specified, looking for a pattern to match module name 'express-serve-static-core'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express-serve-static-core'.
Resolving module name 'express-serve-static-core' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express-serve-static-core'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express-serve-static-core', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express-serve-static-core.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express-serve-static-core.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express-serve-static-core.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express-serve-static-core' does not exist, skipping all lookups in it.
Loading module 'express-serve-static-core' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express-serve-static-core' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'express-serve-static-core' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'connect' from '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'connect'.
'paths' option is specified, looking for a pattern to match module name 'connect'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'connect'.
Resolving module name 'connect' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/connect'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/connect', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/connect.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/connect.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/connect.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/connect' does not exist, skipping all lookups in it.
Loading module 'connect' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/connect.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/connect.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/connect.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/connect'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/connect/package.json'. Package ID is '@types/connect/index.d.ts@3.4.32'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/connect.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts'.
======== Module name 'connect' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts'. ========
======== Resolving module 'http' from '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
'paths' option is specified, looking for a pattern to match module name 'http'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
Resolving module name 'http' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/http'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/http', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/http.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/http' does not exist, skipping all lookups in it.
Loading module 'http' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'http' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'http' was not resolved. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'http' from '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
'paths' option is specified, looking for a pattern to match module name 'http'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
Resolving module name 'http' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/http'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/http', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/http.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/http' does not exist, skipping all lookups in it.
Loading module 'http' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/connect/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'http' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'http' was not resolved. ========
======== Resolving module './apis' from '/Users/fischer/Code/practice-journal/server/routes/routes.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/routes/apis', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/routes/apis.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis/package.json' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis/index.ts' exist - use it as a name resolution result.
======== Module name './apis' was successfully resolved to '/Users/fischer/Code/practice-journal/server/routes/apis/index.ts'. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/server/routes/apis/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/routes/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal/server'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving module './v1' from '/Users/fischer/Code/practice-journal/server/routes/apis/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/routes/apis/v1', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/routes/apis/v1.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis/v1.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis/v1.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis/v1/package.json' does not exist.
File '/Users/fischer/Code/practice-journal/server/routes/apis/v1/index.ts' exist - use it as a name resolution result.
======== Module name './v1' was successfully resolved to '/Users/fischer/Code/practice-journal/server/routes/apis/v1/index.ts'. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/server/routes/apis/v1/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/v1/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal/server/routes/apis'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving module 'passport' from '/Users/fischer/Code/practice-journal/server/routes/apis/v1/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport'.
'paths' option is specified, looking for a pattern to match module name 'passport'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport'.
Resolving module name 'passport' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport' does not exist, skipping all lookups in it.
Loading module 'passport' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/v1/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/routes/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport/lib'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/passport/package.json'. Package ID is 'passport/lib.d.ts@0.4.0'.
File '/Users/fischer/Code/practice-journal/node_modules/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport/lib'.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/passport/lib', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/lib/index.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport/package.json'. Package ID is '@types/passport/index.d.ts@0.4.7'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'.
======== Module name 'passport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'. ========
======== Resolving module '../../../models/user' from '/Users/fischer/Code/practice-journal/server/routes/apis/v1/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/models/user', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/models/user.ts' exist - use it as a name resolution result.
======== Module name '../../../models/user' was successfully resolved to '/Users/fischer/Code/practice-journal/server/models/user.ts'. ========
======== Resolving module '@auth/jwt-strategy' from '/Users/fischer/Code/practice-journal/server/routes/apis/v1/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name '@auth/jwt-strategy'.
'paths' option is specified, looking for a pattern to match module name '@auth/jwt-strategy'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name '@auth/jwt-strategy'.
Resolving module name '@auth/jwt-strategy' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/@auth/jwt-strategy'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/@auth/jwt-strategy', target file type 'TypeScript'.
Loading module '@auth/jwt-strategy' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/v1/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Directory '/Users/fischer/Code/practice-journal/server/routes/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Scoped package detected, looking in 'auth__jwt-strategy'
File '/Users/fischer/Code/practice-journal/node_modules/@types/auth__jwt-strategy.d.ts' does not exist.
Directory '/Users/fischer/Code/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Directory '/Users/fischer/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Directory '/Users/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
Directory '/node_modules' does not exist, skipping all lookups in it.
Scoped package detected, looking in 'auth__jwt-strategy'
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name '@auth/jwt-strategy'.
'paths' option is specified, looking for a pattern to match module name '@auth/jwt-strategy'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name '@auth/jwt-strategy'.
Resolving module name '@auth/jwt-strategy' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/@auth/jwt-strategy'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/@auth/jwt-strategy', target file type 'JavaScript'.
Loading module '@auth/jwt-strategy' from 'node_modules' folder, target file type 'JavaScript'.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/v1/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/routes/apis/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/routes/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/node_modules' does not exist, skipping all lookups in it.
Directory '/node_modules' does not exist, skipping all lookups in it.
======== Module name '@auth/jwt-strategy' was not resolved. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving module 'mongoose' from '/Users/fischer/Code/practice-journal/server/models/user.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mongoose'.
'paths' option is specified, looking for a pattern to match module name 'mongoose'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mongoose'.
Resolving module name 'mongoose' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/mongoose'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/mongoose', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/mongoose.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/mongoose.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/mongoose.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/mongoose' does not exist, skipping all lookups in it.
Loading module 'mongoose' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/models/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'mongoose' was found in cache from location '/Users/fischer/Code/practice-journal/server'.
======== Module name 'mongoose' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'. ========
======== Resolving module 'passport-local-mongoose' from '/Users/fischer/Code/practice-journal/server/models/user.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-local-mongoose'.
'paths' option is specified, looking for a pattern to match module name 'passport-local-mongoose'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-local-mongoose'.
Resolving module name 'passport-local-mongoose' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport-local-mongoose'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport-local-mongoose', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport-local-mongoose.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-local-mongoose.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-local-mongoose.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport-local-mongoose' does not exist, skipping all lookups in it.
Loading module 'passport-local-mongoose' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/models/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/package.json'. Package ID is 'passport-local-mongoose/index.d.ts@5.0.1'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local-mongoose/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/package.json'. Package ID is '@types/passport-local-mongoose/index.d.ts@4.0.12'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts'.
======== Module name 'passport-local-mongoose' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts'. ========
======== Resolving type reference directive 'mongodb', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/package.json'. Package ID is '@types/mongodb/index.d.ts@3.1.17'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'.
======== Type reference directive 'mongodb' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving type reference directive 'bson', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/bson'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/bson/package.json'. Package ID is '@types/bson/index.d.ts@1.0.11'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts'.
======== Type reference directive 'bson' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'bson' from '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'bson'.
'paths' option is specified, looking for a pattern to match module name 'bson'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'bson'.
Resolving module name 'bson' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/bson'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/bson', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/bson.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/bson.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/bson.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/bson' does not exist, skipping all lookups in it.
Loading module 'bson' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './index' that references '/Users/fischer/Code/practice-journal/node_modules/bson/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/bson/package.json'. Package ID is 'bson/index.d.ts@1.1.0'.
File '/Users/fischer/Code/practice-journal/node_modules/bson.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/bson.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/bson.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './index' that references '/Users/fischer/Code/practice-journal/node_modules/bson/index'.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/bson/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/bson/index' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/bson/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/bson'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/bson/package.json'. Package ID is '@types/bson/index.d.ts@1.0.11'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/bson.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts'.
======== Module name 'bson' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts'. ========
======== Resolving module 'events' from '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
'paths' option is specified, looking for a pattern to match module name 'events'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
Resolving module name 'events' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/events'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/events', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/events.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/events' does not exist, skipping all lookups in it.
Loading module 'events' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'events' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'events' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts'. ========
======== Resolving module 'stream' from '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
'paths' option is specified, looking for a pattern to match module name 'stream'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
Resolving module name 'stream' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/stream'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/stream', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/stream.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/stream' does not exist, skipping all lookups in it.
Loading module 'stream' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/stream.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/stream.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/stream.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/stream.d.ts' does not exist.
Directory '/Users/fischer/Code/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/node_modules' does not exist, skipping all lookups in it.
Directory '/node_modules' does not exist, skipping all lookups in it.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
'paths' option is specified, looking for a pattern to match module name 'stream'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
Resolving module name 'stream' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/stream'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/stream', target file type 'JavaScript'.
File '/Users/fischer/Code/practice-journal/server/stream.js' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.jsx' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/stream' does not exist, skipping all lookups in it.
Loading module 'stream' from 'node_modules' folder, target file type 'JavaScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/stream.js' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/stream.jsx' does not exist.
Directory '/Users/fischer/Code/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/node_modules' does not exist, skipping all lookups in it.
Directory '/node_modules' does not exist, skipping all lookups in it.
======== Module name 'stream' was not resolved. ========
Module 'mongoose' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'.
======== Resolving module 'events' from '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
'paths' option is specified, looking for a pattern to match module name 'events'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'events'.
Resolving module name 'events' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/events'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/events', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/events.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/events.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/events' does not exist, skipping all lookups in it.
Loading module 'events' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'events' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'events' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts'. ========
======== Resolving module 'mongodb' from '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mongodb'.
'paths' option is specified, looking for a pattern to match module name 'mongodb'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'mongodb'.
Resolving module name 'mongodb' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/mongodb'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/mongodb', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/mongodb.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/mongodb.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/mongodb.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/mongodb' does not exist, skipping all lookups in it.
Loading module 'mongodb' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/mongodb/package.json'. Package ID is 'mongodb/index.d.ts@3.1.10'.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/mongodb/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/package.json'. Package ID is '@types/mongodb/index.d.ts@3.1.17'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'.
======== Module name 'mongodb' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'. ========
======== Resolving module 'stream' from '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
'paths' option is specified, looking for a pattern to match module name 'stream'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
Resolving module name 'stream' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/stream'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/stream', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/stream.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/stream' does not exist, skipping all lookups in it.
Loading module 'stream' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'stream' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'stream' was not resolved. ========
======== Resolving type reference directive 'mongoose', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/package.json'. Package ID is '@types/mongoose/index.d.ts@5.3.5'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'.
======== Type reference directive 'mongoose' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport-local', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/package.json'. Package ID is '@types/passport-local/index.d.ts@1.0.33'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts'.
======== Type reference directive 'passport-local' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport/package.json'. Package ID is '@types/passport/index.d.ts@0.4.7'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'.
======== Type reference directive 'passport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', primary: true. ========
======== Resolving module 'passport-strategy' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-strategy'.
'paths' option is specified, looking for a pattern to match module name 'passport-strategy'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-strategy'.
Resolving module name 'passport-strategy' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport-strategy'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport-strategy', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport-strategy.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-strategy.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-strategy.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport-strategy' does not exist, skipping all lookups in it.
Loading module 'passport-strategy' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/package.json'. Package ID is 'passport-strategy/lib.d.ts@1.0.0'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/lib/index.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-strategy/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/package.json'. Package ID is '@types/passport-strategy/index.d.ts@0.2.35'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts'.
======== Module name 'passport-strategy' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts'. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving type reference directive 'passport', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport/package.json'. Package ID is '@types/passport/index.d.ts@0.4.7'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'.
======== Type reference directive 'passport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', primary: true. ========
======== Resolving type reference directive 'express', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express/package.json'. Package ID is '@types/express/index.d.ts@4.16.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'.
======== Type reference directive 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', primary: true. ========
======== Resolving module 'passport' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport'.
'paths' option is specified, looking for a pattern to match module name 'passport'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport'.
Resolving module name 'passport' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport' does not exist, skipping all lookups in it.
Loading module 'passport' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'passport' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'passport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
Module 'mongoose' was resolved as locally declared ambient module in file '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts'.
======== Resolving module 'passport-local' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-local'.
'paths' option is specified, looking for a pattern to match module name 'passport-local'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-local'.
Resolving module name 'passport-local' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport-local'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport-local', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport-local.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-local.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-local.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport-local' does not exist, skipping all lookups in it.
Loading module 'passport-local' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/passport-local/package.json'. Package ID is 'passport-local/lib.d.ts@1.0.0'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/lib/index.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-local/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/package.json'. Package ID is '@types/passport-local/index.d.ts@1.0.33'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts'.
======== Module name 'passport-local' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts'. ========
======== Resolving module './authentication' from '/Users/fischer/Code/practice-journal/server/auth/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/auth/authentication', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/auth/authentication.ts' exist - use it as a name resolution result.
======== Module name './authentication' was successfully resolved to '/Users/fischer/Code/practice-journal/server/auth/authentication.ts'. ========
======== Resolving module 'passport' from '/Users/fischer/Code/practice-journal/server/auth/authentication.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport'.
'paths' option is specified, looking for a pattern to match module name 'passport'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport'.
Resolving module name 'passport' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport' does not exist, skipping all lookups in it.
Loading module 'passport' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/auth/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'passport' was found in cache from location '/Users/fischer/Code/practice-journal/server'.
======== Module name 'passport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'. ========
======== Resolving module './local-strategy' from '/Users/fischer/Code/practice-journal/server/auth/authentication.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/auth/local-strategy', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/auth/local-strategy.ts' exist - use it as a name resolution result.
======== Module name './local-strategy' was successfully resolved to '/Users/fischer/Code/practice-journal/server/auth/local-strategy.ts'. ========
======== Resolving module './jwt-strategy' from '/Users/fischer/Code/practice-journal/server/auth/authentication.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/auth/jwt-strategy', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/auth/jwt-strategy.ts' exist - use it as a name resolution result.
======== Module name './jwt-strategy' was successfully resolved to '/Users/fischer/Code/practice-journal/server/auth/jwt-strategy.ts'. ========
======== Resolving module '../models/user' from '/Users/fischer/Code/practice-journal/server/auth/local-strategy.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/models/user', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/models/user.ts' exist - use it as a name resolution result.
======== Module name '../models/user' was successfully resolved to '/Users/fischer/Code/practice-journal/server/models/user.ts'. ========
======== Resolving module 'passport-jwt' from '/Users/fischer/Code/practice-journal/server/auth/jwt-strategy.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-jwt'.
'paths' option is specified, looking for a pattern to match module name 'passport-jwt'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-jwt'.
Resolving module name 'passport-jwt' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport-jwt'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport-jwt', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport-jwt.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-jwt.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-jwt.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport-jwt' does not exist, skipping all lookups in it.
Loading module 'passport-jwt' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/auth/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/package.json'. Package ID is 'passport-jwt/lib.d.ts@4.0.0'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field './lib' that references '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/lib/index.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/passport-jwt/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/package.json'. Package ID is '@types/passport-jwt/index.d.ts@3.0.1'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts'.
======== Module name 'passport-jwt' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts'. ========
======== Resolving module 'jsonwebtoken' from '/Users/fischer/Code/practice-journal/server/auth/jwt-strategy.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'jsonwebtoken'.
'paths' option is specified, looking for a pattern to match module name 'jsonwebtoken'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'jsonwebtoken'.
Resolving module name 'jsonwebtoken' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/jsonwebtoken'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/jsonwebtoken', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/jsonwebtoken.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/jsonwebtoken.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/jsonwebtoken.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/jsonwebtoken' does not exist, skipping all lookups in it.
Loading module 'jsonwebtoken' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/auth/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/package.json'. Package ID is 'jsonwebtoken/index.d.ts@8.4.0'.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/jsonwebtoken/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/package.json'. Package ID is '@types/jsonwebtoken/index.d.ts@8.3.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts'.
======== Module name 'jsonwebtoken' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts'. ========
======== Resolving module '../models/user' from '/Users/fischer/Code/practice-journal/server/auth/jwt-strategy.ts'. ========
Resolution for module '../models/user' was found in cache from location '/Users/fischer/Code/practice-journal/server/auth'.
======== Module name '../models/user' was successfully resolved to '/Users/fischer/Code/practice-journal/server/models/user.ts'. ========
======== Resolving module 'passport-strategy' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-strategy'.
'paths' option is specified, looking for a pattern to match module name 'passport-strategy'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'passport-strategy'.
Resolving module name 'passport-strategy' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/passport-strategy'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/passport-strategy', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/passport-strategy.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-strategy.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/passport-strategy.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/passport-strategy' does not exist, skipping all lookups in it.
Loading module 'passport-strategy' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'passport-strategy' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'passport-strategy' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts'. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving module 'jsonwebtoken' from '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'jsonwebtoken'.
'paths' option is specified, looking for a pattern to match module name 'jsonwebtoken'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'jsonwebtoken'.
Resolving module name 'jsonwebtoken' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/jsonwebtoken'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/jsonwebtoken', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/jsonwebtoken.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/jsonwebtoken.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/jsonwebtoken.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/jsonwebtoken' does not exist, skipping all lookups in it.
Loading module 'jsonwebtoken' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'jsonwebtoken' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'jsonwebtoken' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts'. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'stream' from '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
'paths' option is specified, looking for a pattern to match module name 'stream'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
Resolving module name 'stream' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/stream'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/stream', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/stream.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/stream' does not exist, skipping all lookups in it.
Loading module 'stream' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'stream' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'stream' was not resolved. ========
======== Resolving module 'logform' from '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'logform'.
'paths' option is specified, looking for a pattern to match module name 'logform'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'logform'.
Resolving module name 'logform' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/logform'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/logform', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/logform.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/logform.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/logform.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/logform' does not exist, skipping all lookups in it.
Loading module 'logform' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field './index.d.ts' that references '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/logform/package.json'. Package ID is 'logform/index.d.ts@1.10.0'.
File '/Users/fischer/Code/practice-journal/node_modules/logform.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/logform.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/logform.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field './index.d.ts' that references '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'.
File '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'.
======== Module name 'logform' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'. ========
======== Resolving module 'winston-transport' from '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston-transport'.
'paths' option is specified, looking for a pattern to match module name 'winston-transport'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston-transport'.
Resolving module name 'winston-transport' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/winston-transport'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/winston-transport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/winston-transport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston-transport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston-transport.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/winston-transport' does not exist, skipping all lookups in it.
Loading module 'winston-transport' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/winston-transport/package.json'. Package ID is 'winston-transport/index.d.ts@4.2.0'.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'.
======== Module name 'winston-transport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'. ========
======== Resolving module './lib/winston/config/index' from '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/config/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/config/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/config/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/config/index.d.ts' exist - use it as a name resolution result.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/winston/package.json'. Package ID is 'winston/lib/winston/config/index.d.ts@3.1.0'.
======== Module name './lib/winston/config/index' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/config/index.d.ts'. ========
======== Resolving module './lib/winston/transports/index' from '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.d.ts' exist - use it as a name resolution result.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/winston/package.json'. Package ID is 'winston/lib/winston/transports/index.d.ts@3.1.0'.
======== Module name './lib/winston/transports/index' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.d.ts'. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'stream' from '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
'paths' option is specified, looking for a pattern to match module name 'stream'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'stream'.
Resolving module name 'stream' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/stream'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/stream', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/stream.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/stream.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/stream' does not exist, skipping all lookups in it.
Loading module 'stream' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston-transport/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'stream' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'stream' was not resolved. ========
======== Resolving module 'logform' from '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'logform'.
'paths' option is specified, looking for a pattern to match module name 'logform'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'logform'.
Resolving module name 'logform' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/logform'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/logform', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/logform.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/logform.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/logform.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/logform' does not exist, skipping all lookups in it.
Loading module 'logform' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston-transport/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field './index.d.ts' that references '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/logform/package.json'. Package ID is 'logform/index.d.ts@1.10.0'.
File '/Users/fischer/Code/practice-journal/node_modules/logform.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/logform.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/logform.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field './index.d.ts' that references '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'.
File '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'.
======== Module name 'logform' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/logform/index.d.ts'. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/config/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving module 'http' from '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
'paths' option is specified, looking for a pattern to match module name 'http'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'http'.
Resolving module name 'http' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/http'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/http', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/http.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/http.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/http' does not exist, skipping all lookups in it.
Loading module 'http' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/lib/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'http' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'http' was not resolved. ========
======== Resolving module 'winston-transport' from '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston-transport'.
'paths' option is specified, looking for a pattern to match module name 'winston-transport'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston-transport'.
Resolving module name 'winston-transport' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/winston-transport'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/winston-transport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/winston-transport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston-transport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston-transport.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/winston-transport' does not exist, skipping all lookups in it.
Loading module 'winston-transport' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/transports/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/lib/winston/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/winston/lib/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'winston-transport' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/winston'.
======== Module name 'winston-transport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'. ========
======== Resolving module 'express' from '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
'paths' option is specified, looking for a pattern to match module name 'express'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'express'.
Resolving module name 'express' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/express'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/express', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/express.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/express.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/express' does not exist, skipping all lookups in it.
Loading module 'express' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'express' was found in cache from location '/Users/fischer/Code/practice-journal/node_modules/@types'.
======== Module name 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'. ========
======== Resolving module 'winston' from '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston'.
'paths' option is specified, looking for a pattern to match module name 'winston'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston'.
Resolving module name 'winston' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/winston'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/winston', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/winston.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/winston' does not exist, skipping all lookups in it.
Loading module 'winston' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
Resolution for module 'winston' was found in cache from location '/Users/fischer/Code/practice-journal'.
======== Module name 'winston' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston/index.d.ts'. ========
======== Resolving module 'winston-transport' from '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston-transport'.
'paths' option is specified, looking for a pattern to match module name 'winston-transport'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'winston-transport'.
Resolving module name 'winston-transport' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/winston-transport'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/winston-transport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/winston-transport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston-transport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/winston-transport.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/winston-transport' does not exist, skipping all lookups in it.
Loading module 'winston-transport' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/node_modules' does not exist, skipping all lookups in it.
Directory '/Users/fischer/Code/practice-journal/node_modules/@types/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/winston-transport/package.json'. Package ID is 'winston-transport/index.d.ts@4.2.0'.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'index.js' that references '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js'.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'.
======== Module name 'winston-transport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/winston-transport/index.d.ts'. ========
======== Resolving module 'dotenv' from '/Users/fischer/Code/practice-journal/server/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'dotenv'.
'paths' option is specified, looking for a pattern to match module name 'dotenv'.
'baseUrl' option is set to '/Users/fischer/Code/practice-journal/server', using this value to resolve non-relative module name 'dotenv'.
Resolving module name 'dotenv' relative to base url '/Users/fischer/Code/practice-journal/server' - '/Users/fischer/Code/practice-journal/server/dotenv'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/dotenv', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/dotenv.ts' does not exist.
File '/Users/fischer/Code/practice-journal/server/dotenv.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/server/dotenv.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/server/dotenv' does not exist, skipping all lookups in it.
Loading module 'dotenv' from 'node_modules' folder, target file type 'TypeScript'.
Directory '/Users/fischer/Code/practice-journal/server/node_modules' does not exist, skipping all lookups in it.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'lib/main.js' that references '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/dotenv/package.json'. Package ID is 'dotenv/lib/main.d.ts@6.2.0'.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field 'lib/main.js' that references '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js'.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js' exist - use it as a name resolution result.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js' has an unsupported extension, so skipping it.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js.d.ts' does not exist.
File name '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js' has a '.js' extension - stripping it.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.d.ts' does not exist.
Directory '/Users/fischer/Code/practice-journal/node_modules/dotenv/lib/main.js' does not exist, skipping all lookups in it.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/dotenv/index.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/package.json'. Package ID is '@types/dotenv/index.d.ts@6.1.0'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv.d.ts' does not exist.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts'.
======== Module name 'dotenv' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts'. ========
======== Resolving module './app' from '/Users/fischer/Code/practice-journal/server/index.ts'. ========
Explicitly specified module resolution kind: 'NodeJs'.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/server/app', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/server/app.ts' exist - use it as a name resolution result.
======== Module name './app' was successfully resolved to '/Users/fischer/Code/practice-journal/server/app.ts'. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving type reference directive 'body-parser', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/package.json'. Package ID is '@types/body-parser/index.d.ts@1.17.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts'.
======== Type reference directive 'body-parser' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/body-parser/index.d.ts', primary: true. ========
======== Resolving type reference directive 'bson', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/bson'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/bson/package.json'. Package ID is '@types/bson/index.d.ts@1.0.11'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts'.
======== Type reference directive 'bson' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/bson/index.d.ts', primary: true. ========
======== Resolving type reference directive 'connect', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/connect'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/connect/package.json'. Package ID is '@types/connect/index.d.ts@3.4.32'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts'.
======== Type reference directive 'connect' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/connect/index.d.ts', primary: true. ========
======== Resolving type reference directive 'dotenv', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/package.json'. Package ID is '@types/dotenv/index.d.ts@6.1.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts'.
======== Type reference directive 'dotenv' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/dotenv/index.d.ts', primary: true. ========
======== Resolving type reference directive 'events', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/events'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/events/package.json'. Package ID is '@types/events/index.d.ts@1.2.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts'.
======== Type reference directive 'events' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/events/index.d.ts', primary: true. ========
======== Resolving type reference directive 'express', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express/package.json'. Package ID is '@types/express/index.d.ts@4.16.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts'.
======== Type reference directive 'express' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express/index.d.ts', primary: true. ========
======== Resolving type reference directive 'express-serve-static-core', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/package.json'. Package ID is '@types/express-serve-static-core/index.d.ts@4.16.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts'.
======== Type reference directive 'express-serve-static-core' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-serve-static-core/index.d.ts', primary: true. ========
======== Resolving type reference directive 'express-winston', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/package.json'. Package ID is '@types/express-winston/index.d.ts@3.0.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts'.
======== Type reference directive 'express-winston' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/express-winston/index.d.ts', primary: true. ========
======== Resolving type reference directive 'jsonwebtoken', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/package.json'. Package ID is '@types/jsonwebtoken/index.d.ts@8.3.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts'.
======== Type reference directive 'jsonwebtoken' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/jsonwebtoken/index.d.ts', primary: true. ========
======== Resolving type reference directive 'mime', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mime'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mime/package.json'. Package ID is '@types/mime/index.d.ts@2.0.0'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts'.
======== Type reference directive 'mime' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mime/index.d.ts', primary: true. ========
======== Resolving type reference directive 'mongodb', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/package.json'. Package ID is '@types/mongodb/index.d.ts@3.1.17'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts'.
======== Type reference directive 'mongodb' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongodb/index.d.ts', primary: true. ========
======== Resolving type reference directive 'mongoose', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/package.json'. Package ID is '@types/mongoose/index.d.ts@5.3.5'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts'.
======== Type reference directive 'mongoose' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/mongoose/index.d.ts', primary: true. ========
======== Resolving type reference directive 'node', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/node/package.json'. Package ID is '@types/node/index.d.ts@10.12.15'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/node/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/node/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts'.
======== Type reference directive 'node' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/node/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport/package.json'. Package ID is '@types/passport/index.d.ts@0.4.7'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/passport', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport.d.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts'.
======== Type reference directive 'passport' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport-jwt', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/package.json'. Package ID is '@types/passport-jwt/index.d.ts@3.0.1'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts'.
======== Type reference directive 'passport-jwt' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-jwt/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport-local', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/package.json'. Package ID is '@types/passport-local/index.d.ts@1.0.33'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts'.
======== Type reference directive 'passport-local' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport-local-mongoose', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/package.json'. Package ID is '@types/passport-local-mongoose/index.d.ts@4.0.12'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts'.
======== Type reference directive 'passport-local-mongoose' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-local-mongoose/index.d.ts', primary: true. ========
======== Resolving type reference directive 'passport-strategy', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/package.json'. Package ID is '@types/passport-strategy/index.d.ts@0.2.35'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts'.
======== Type reference directive 'passport-strategy' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/passport-strategy/index.d.ts', primary: true. ========
======== Resolving type reference directive 'range-parser', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/package.json'. Package ID is '@types/range-parser/index.d.ts@1.2.3'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' has 'types' field 'index' that references '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index' does not exist.
Loading module as file / folder, candidate module location '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index', target file type 'TypeScript'.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.ts' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.tsx' does not exist.
File '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts'.
======== Type reference directive 'range-parser' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/range-parser/index.d.ts', primary: true. ========
======== Resolving type reference directive 'serve-static', containing file '/Users/fischer/Code/practice-journal/__inferred type names__.ts', root directory '/Users/fischer/Code/practice-journal/node_modules/@types'. ========
Resolving with primary search path '/Users/fischer/Code/practice-journal/node_modules/@types'.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
'package.json' has 'main' field '' that references '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static'.
'package.json' does not have a 'typesVersions' field.
Found 'package.json' at '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/package.json'. Package ID is '@types/serve-static/index.d.ts@1.13.2'.
'package.json' does not have a 'typesVersions' field.
'package.json' does not have a 'typings' field.
'package.json' does not have a 'types' field.
File '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts' exist - use it as a name resolution result.
Resolving real path for '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts', result '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts'.
======== Type reference directive 'serve-static' was successfully resolved to '/Users/fischer/Code/practice-journal/node_modules/@types/serve-static/index.d.ts', primary: true. ========
server/routes/apis/v1/index.ts(5,31): error TS2307: Cannot find module '@auth/jwt-strategy'.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
