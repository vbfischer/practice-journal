{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { createLogger } from 'redux-logger';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nvar logger = createLogger({\n  collapsed: true\n});\nvar createStoreWithMiddleware = applyMiddleware(apiMiddleware, thunkMiddleware, logger)(createStore);\nexport default (function () {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  var store = createStoreWithMiddleware(reducer, initialState);\n\n  if (module.hot) {\n    module.hot.accept('./reducer', function () {\n      store.replaceReducer(require('./reducer').default);\n    });\n  }\n\n  return {\n    persistor: persistStore(store),\n    store: store\n  };\n});","map":{"version":3,"sources":["/Users/fischer/Code/practice-journal/client/src/redux/store.js"],"names":["createStore","applyMiddleware","reducer","createLogger","apiMiddleware","thunkMiddleware","persistStore","logger","collapsed","createStoreWithMiddleware","initialState","undefined","store","module","hot","accept","replaceReducer","require","default","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,IAAMC,MAAM,GAAGJ,YAAY,CAAC;AAC1BK,EAAAA,SAAS,EAAE;AADe,CAAD,CAA3B;AAIA,IAAMC,yBAAyB,GAAGR,eAAe,CAACG,aAAD,EAAgBC,eAAhB,EAAiCE,MAAjC,CAAf,CAChCP,WADgC,CAAlC;AAIA,gBAAe,YAA8B;AAAA,MAA7BU,YAA6B,uEAAdC,SAAc;AAC3C,MAAMC,KAAK,GAAGH,yBAAyB,CAACP,OAAD,EAAUQ,YAAV,CAAvC;;AAEA,MAAIG,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,YAAM;AACnCH,MAAAA,KAAK,CAACI,cAAN,CAAqBC,OAAO,CAAC,WAAD,CAAP,CAAqBC,OAA1C;AACD,KAFD;AAGD;;AAED,SAAO;AACLC,IAAAA,SAAS,EAAEb,YAAY,CAACM,KAAD,CADlB;AAELA,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID,CAbD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\n\nimport reducer from './reducer';\nimport { createLogger } from 'redux-logger';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\n\nconst logger = createLogger({\n  collapsed: true\n});\n\nconst createStoreWithMiddleware = applyMiddleware(apiMiddleware, thunkMiddleware, logger)(\n  createStore\n);\n\nexport default (initialState = undefined) => {\n  const store = createStoreWithMiddleware(reducer, initialState);\n\n  if (module.hot) {\n    module.hot.accept('./reducer', () => {\n      store.replaceReducer(require('./reducer').default);\n    });\n  }\n\n  return {\n    persistor: persistStore(store),\n    store\n  };\n};\n"]},"metadata":{},"sourceType":"module"}