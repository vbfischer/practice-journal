{"ast":null,"code":"import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { getToken } from '../redux/reducer';\nvar locationHelper = locationHelperBuilder({});\nexport var authenticatedWrapper = connectedRouterRedirect({\n  redirectPath: '/login',\n  authenticatedSelector: function authenticatedSelector(state) {\n    return !!getToken(state);\n  },\n  wrapperDisplayName: 'authenticatedWrapper'\n});\nexport var notAuthenticatedWrapper = connectedRouterRedirect({\n  redirectPath: function redirectPath(state, ownProps) {\n    return locationHelper.getRedirectQueryParam(ownProps) || '/';\n  },\n  allowRedirectBack: false,\n  authenticatedSelector: function authenticatedSelector(state) {\n    return !getToken(state);\n  },\n  wrapperDisplayName: 'notAuthenticatedWrapper'\n});","map":{"version":3,"sources":["/Users/fischer/Code/practice-journal/client/src/auth/Auth.js"],"names":["connectedRouterRedirect","locationHelperBuilder","getToken","locationHelper","authenticatedWrapper","redirectPath","authenticatedSelector","state","wrapperDisplayName","notAuthenticatedWrapper","ownProps","getRedirectQueryParam","allowRedirectBack"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,sCAAxC;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,IAAMC,cAAc,GAAGF,qBAAqB,CAAC,EAAD,CAA5C;AAEA,OAAO,IAAMG,oBAAoB,GAAGJ,uBAAuB,CAAC;AAC1DK,EAAAA,YAAY,EAAE,QAD4C;AAE1DC,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAI,CAAC,CAACL,QAAQ,CAACK,KAAD,CAAd;AAAA,GAF8B;AAG1DC,EAAAA,kBAAkB,EAAE;AAHsC,CAAD,CAApD;AAMP,OAAO,IAAMC,uBAAuB,GAAGT,uBAAuB,CAAC;AAC7DK,EAAAA,YAAY,EAAE,sBAACE,KAAD,EAAQG,QAAR;AAAA,WAAqBP,cAAc,CAACQ,qBAAf,CAAqCD,QAArC,KAAkD,GAAvE;AAAA,GAD+C;AAE7DE,EAAAA,iBAAiB,EAAE,KAF0C;AAG7DN,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAI,CAACL,QAAQ,CAACK,KAAD,CAAb;AAAA,GAHiC;AAI7DC,EAAAA,kBAAkB,EAAE;AAJyC,CAAD,CAAvD","sourcesContent":["import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\n\nimport { getToken } from '../redux/reducer';\n\nconst locationHelper = locationHelperBuilder({});\n\nexport const authenticatedWrapper = connectedRouterRedirect({\n  redirectPath: '/login',\n  authenticatedSelector: state => !!getToken(state),\n  wrapperDisplayName: 'authenticatedWrapper'\n});\n\nexport const notAuthenticatedWrapper = connectedRouterRedirect({\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\n  allowRedirectBack: false,\n  authenticatedSelector: state => !getToken(state),\n  wrapperDisplayName: 'notAuthenticatedWrapper'\n});\n"]},"metadata":{},"sourceType":"module"}