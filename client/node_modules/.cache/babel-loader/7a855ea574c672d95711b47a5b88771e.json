{"ast":null,"code":"import _objectSpread from \"/Users/fischer/Code/practice-journal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { reducer as form } from 'redux-form';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport jwtDecode from 'jwt-decode';\nexport var LOAD_USER = 'LOAD_USER';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOGIN_USER = 'LOGIN_USER';\nexport var LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport var LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\nexport var LOGOUT = 'LOGOUT';\n\nvar auth = function auth() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case 'persist/REHYDRATE':\n      var token = jwtDecode(payload.auth.token);\n      var exp = token.exp;\n      var d = new Date(0);\n      d.setUTCSeconds(exp);\n      console.log(d);\n      return state;\n\n    case LOGIN_USER_SUCCESS:\n      // const { token } = payload;\n      return _objectSpread({}, state, payload);\n\n    default:\n      return state;\n  }\n};\n\nexport var getToken = function getToken(state) {\n  return state.auth.token;\n};\nexport var getUser = function getUser(state) {\n  return state.auth.user;\n};\nexport default persistReducer({\n  debug: true,\n  key: 'blacksheep',\n  whitelist: ['auth'],\n  storage: storage\n}, combineReducers({\n  auth: auth,\n  form: form\n}));","map":{"version":3,"sources":["/Users/fischer/Code/practice-journal/client/src/redux/reducer.js"],"names":["combineReducers","reducer","form","persistReducer","storage","jwtDecode","LOAD_USER","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","LOGOUT","auth","state","type","payload","token","exp","d","Date","setUTCSeconds","console","log","getToken","getUser","user","debug","key","whitelist"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,OAAO,IAAIC,IAApB,QAAgC,YAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,MAAM,GAAG,QAAf;;AAEP,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1B,EAA0B;;AAAA;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC9C,UAAQD,IAAR;AACE,SAAK,mBAAL;AACE,UAAME,KAAK,GAAGZ,SAAS,CAACW,OAAO,CAACH,IAAR,CAAaI,KAAd,CAAvB;AACA,UAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAV;AACAD,MAAAA,CAAC,CAACE,aAAF,CAAgBH,GAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AAEA,aAAOL,KAAP;;AAEF,SAAKJ,kBAAL;AACE;AAEA,+BACKI,KADL,EAEKE,OAFL;;AAIF;AACE,aAAOF,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,OAAO,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAAAV,KAAK;AAAA,SAAIA,KAAK,CAACD,IAAN,CAAWI,KAAf;AAAA,CAAtB;AACP,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAAAX,KAAK;AAAA,SAAIA,KAAK,CAACD,IAAN,CAAWa,IAAf;AAAA,CAArB;AAEP,eAAevB,cAAc,CAC3B;AACEwB,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,GAAG,EAAE,YAFP;AAGEC,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHb;AAIEzB,EAAAA,OAAO,EAAPA;AAJF,CAD2B,EAO3BJ,eAAe,CAAC;AACda,EAAAA,IAAI,EAAJA,IADc;AAEdX,EAAAA,IAAI,EAAJA;AAFc,CAAD,CAPY,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\nimport { reducer as form } from 'redux-form';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport jwtDecode from 'jwt-decode';\n\nexport const LOAD_USER = 'LOAD_USER';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\n\nexport const LOGOUT = 'LOGOUT';\n\nconst auth = (state = {}, { type, payload }) => {\n  switch (type) {\n    case 'persist/REHYDRATE':\n      const token = jwtDecode(payload.auth.token);\n      const exp = token.exp;\n      const d = new Date(0);\n      d.setUTCSeconds(exp);\n      console.log(d);\n\n      return state;\n\n    case LOGIN_USER_SUCCESS:\n      // const { token } = payload;\n\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getToken = state => state.auth.token;\nexport const getUser = state => state.auth.user;\n\nexport default persistReducer(\n  {\n    debug: true,\n    key: 'blacksheep',\n    whitelist: ['auth'],\n    storage\n  },\n  combineReducers({\n    auth,\n    form\n  })\n);\n"]},"metadata":{},"sourceType":"module"}